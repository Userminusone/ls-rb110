On line 1 of this program, the non destructive method select is invoked on the array of hashes, [{a: 'ant', b: 'elephant'}, {c: 'cat'}], and each hash is passed to the subsequent do..end block and is used as the value which the block parameter hash is initialized to. This method returns [{:c => 'cat'}], but this return value isn't used.
On line 2 of this program, the non destructive method all? is invoked on the block parameter hash, and each key value pair of the hash is passed to the subsequent inner do..end block, where the key and the value are used as the values that the block parameters key and value are initialized to, respectively.
On line 3 of this program, the [] method is invoked on the block parameter value with the argument 0, and the return value, which is the first character of the block parameter value, is used as the first argument of the == expression. Additionally, the to_s method is invoked on the block parameter key, and the return value is used as the second argument of the == expression.
Since this expression is the last expression in the inner do..end block, the return value of the expression is used as the return value of the inner do..end block, which is used to determine whether the all? method will return true or false.
Since the invocation of all? is the last expression in the outer do..end block, its return value is used as the return value of the outer do..end block, which is used to determine what elements of the outer array will be returned from the invocation of select in a new array.

If the non destructive method any? were used on line 2 rather than all?, the select method invoked on line 1 would return [{:a => 'ant',:b => 'elephant'},{:c => 'cat'}].